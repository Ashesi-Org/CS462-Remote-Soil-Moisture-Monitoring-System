name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up PHP environment
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, json, pdo, mysqli

    # Step 3: Install dependencies
    - name: Install Composer dependencies
      run: composer install

    # Step 4: Ensure PHPUnit is executable
    - name: Make PHPUnit executable
      run: chmod +x vendor/bin/phpunit

    # Step 5: Run a basic PHP linter
    - name: PHP Syntax Check
      run: php -l index.php

    # Debugging Step: List vendor directory contents
    - name: List vendor directory
      run: ls -R vendor

    # Step 6: Lint PHP code using PHP_CodeSniffer
    - name: Run PHP_CodeSniffer (Lint)
      run: |
        if [ -f composer.json ]; then
          ./vendor/bin/phpcs --standard=PSR12 --error-severity=1 --warning-severity=0 .
        else
          echo "PHP_CodeSniffer not installed."
        fi
      continue-on-error: true

    # Step 7: Auto-fix code issues using PHP-CS-Fixer
    - name: Auto-fix coding style issues
      run: |
        if [ -f composer.json ]; then
          ./vendor/bin/php-cs-fixer fix --allow-risky=yes
        else
          echo "PHP-CS-Fixer not installed."
        fi

    # Step 8: Run PHPUnit Tests
    - name: Run PHPUnit Tests
      run: |
        if [ -f composer.json ]; then
          ./vendor/bin/phpunit
        else
          echo "No tests to run."
        fi
